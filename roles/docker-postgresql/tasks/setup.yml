---
- name: Create postgresql network
  community.docker.docker_network:
    name: postgresql-network

- name: Create directorys
  ansible.builtin.file:
    path: /opt/docker-postgresql/data
    state: directory
    owner: '1001'
    group: '1001'
    mode: 0755

- name: Ensure bitnami/postgresql image is pulled
  community.docker.docker_image:
    name: docker.io/bitnami/postgresql
    source: pull
    force_source: yes
  register: pulled

- name: Remove postgresql container
  community.docker.docker_container:
    name: postgresql
    state: absent
  when: pulled.changed

- name: Get infos on postgresql container
  community.docker.docker_container_info:
    name: postgresql
  register: result

- name: Create postgresql container
  ansible.builtin.shell: |
    docker run -d \
    --name=postgresql \
    - ALLOW_EMPTY_PASSWORD={{docker_postgresql_allow_empty_password}} \
    - POSTGRESQL_USERNAME={{docker_postgresql_username}} \
    - POSTGRESQL_PASSWORD={{docker_postgresql_password}} \
    - POSTGRESQL_DATABASE={{docker_postgresql_database}} \
    - POSTGRESQL_POSTGRES_PASSWORD={{docker_postgresql_postgres_password}} \
    - POSTGRESQL_PGAUDIT_LOG={{docker_postgresql_pgaudit_log}} \
    - POSTGRESQL_PGAUDIT_LOG_CATALOG={{docker_postgresql_pgaudit_log_catalog}} \
    - POSTGRESQL_LOG_CONNECTIONS={{docker_postgresql_log_connections}} \
    - POSTGRESQL_LOG_DISCONNECTIONS={{docker_postgresql_log_disconnections}} \
    - POSTGRESQL_LOG_HOSTNAME={{docker_postgresql_log_hostname}} \
    - POSTGRESQL_LOG_LINE_PREFIX={{docker_postgresql_log_line_prefix}} \
    - POSTGRESQL_LOG_TIMEZONE={{docker_postgresql_log_timezone}} \
    - POSTGRESQL_USERNAME_CONNECTION_LIMIT={{docker_postgresql_username_connection_limit}} \
    - POSTGRESQL_POSTGRES_CONNECTION_LIMIT={{docker_postgresql_postgres_connection_limit}} \
    - POSTGRESQL_STATEMENT_TIMEOUT={{docker_postgresql_statement_timeout}} \
    - POSTGRESQL_TCP_KEEPALIVES_INTERVAL={{docker_postgresql_tcp_keepalives_interval}} \
    - POSTGRESQL_TCP_KEEPALIVES_IDLE={{docker_postgresql_tcp_keepalives_idle}} \
    - POSTGRESQL_TCP_KEEPALIVES_COUNT={{docker_postgresql_tcp_keepalives_count}} \
    - POSTGRESQL_TIMEZONE={{docker_postgresql_timezone}} \
    -v /opt/docker-postgresql/data:/bitnami/postgresql:Z \
    --network=postgresql-network \
    --restart unless-stopped \
    docker.io/bitnami/postgresql
  when:
    pulled.changed
    or
    result.exists == false

- name: Add postgresql container to bridge network
  ansible.builtin.shell:
    cmd: "docker network connect bridge postgresql"
  when:
    pulled.changed
    or
    result.exists == false
