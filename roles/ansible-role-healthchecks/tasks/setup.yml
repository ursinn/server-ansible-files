---
- name: Create config directory
  ansible.builtin.file:
    path: "{{app_healthchecks_dir}}/config"
    state: directory
    owner: "{{app_healthchecks_puid}}"
    group: "{{app_healthchecks_pgid}}"
    mode: 0755

- name: Ensure linuxserver/healthchecks image is pulled
  community.docker.docker_image:
    name: lscr.io/linuxserver/healthchecks
    source: pull
    force_source: yes
  register: pulled

- name: Remove healthchecks container
  community.docker.docker_container:
    name: healthchecks
    state: absent
  when: pulled.changed

- name: Get infos on healthchecks container
  community.docker.docker_container_info:
    name: healthchecks
  register: result

- name: Create healthchecks container
  ansible.builtin.shell: |
    docker run -d \
    --name=healthchecks \
    -e PUID={{app_healthchecks_puid}} \
    -e PGID={{app_healthchecks_pgid}} \
    -e SITE_NAME={{app_healthchecks_site_name}} \
    -e DEFAULT_FROM_EMAIL={{app_healthchecks_default_from_email}} \
    -e EMAIL_HOST={{app_healthchecks_email_host}} \
    -e EMAIL_PORT={{app_healthchecks_email_port}} \
    -e EMAIL_HOST_USER={{app_healthchecks_email_host_user}} \
    -e EMAIL_HOST_PASSWORD={{app_healthchecks_email_host_password}} \
    -e EMAIL_USE_TLS={{app_healthchecks_email_use_tls}} \
    -e ALLOWED_HOSTS={{app_healthchecks_allowed_hosts}} \
    -e SUPERUSER_EMAIL={{app_healthchecks_superuser_email}} \
    -e SUPERUSER_PASSWORD={{app_healthchecks_superuser_password}} \
    -e REGENERATE_SETTINGS={{app_healthchecks_regenerate_settings}} \
    -e SITE_LOGO_URL={{app_healthchecks_site_logo_url}} \
    -e SECRET_KEY={{app_healthchecks_secret_key}} \
    -e APPRISE_ENABLED={{app_healthchecks_apprise_enabled}} \
    -v /{{app_healthchecks_dir}}/config:/config:Z \
    --network=app-network \
    --restart unless-stopped \
    lscr.io/linuxserver/healthchecks
  when: 
    pulled.changed
    or
    result.exists == false
