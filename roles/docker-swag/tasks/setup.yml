---
- name: Create app network
  community.docker.docker_network:
    name: app-network

- name: Create directory
  ansible.builtin.file:
    path: "{{docker_swag_dir}}/config/nginx/proxy-confs"
    state: directory
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    mode: 0755

- name: Copy files
  ansible.builtin.copy:
    src: "{{ item }}.subdomain.conf"
    dest: "{{docker_swag_dir}}/config/nginx/proxy-confs/{{ item }}.subdomain.conf"
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    force: "{{docker_swag_force}}"
    mode: 0644
  with_items:
    - "archisteamfarm"
    - "authelia"
    - "bazarr"
    - "beets"
    - "boinc"
    - "bookstack"
    - "calibre"
    - "calibre-web"
    - "chevereto"
    - "couchpotato"
    - "deluge"
    - "dillinger"
    - "dokuwiki"
    - "duplicati"
    - "emby"
    - "embystat"
    - "emulatorjs"
    - "foldingathome"
    - "freshrss"
    - "gitea"
    - "grafana"
    - "grocy"
    - "guacamole"
    - "headphones"
    - "healthchecks"
    - "hedgedoc"
    - "heimdall"
    - "homeassistant"
    - "homer"
    - "influxdb"
    - "jellyfin"
    - "jenkins"
    - "keycloak"
    - "lazylibrarian"
    - "librespeed"
    - "lidarr"
    - "loki"
    - "lychee"
    - "medusa"
    - "mstream"
    - "mylar"
    - "mylar3"
    - "netboot"
    - "netbootxyz"
    - "nextcloud"
    - "nzbget"
    - "nzbhydra"
    - "ombi"
    - "overseerr"
    - "papermerge"
    - "pihole"
    - "piwigo"
    - "plex"
    - "plexwebtools"
    - "portainer"
    - "privatebin"
    - "prometheus"
    - "pydio"
    - "pydio-cells"
    - "pyload"
    - "qbittorrent"
    - "radarr"
    - "resilio-sync"
    - "sabnzbd"
    - "scrutiny"
    - "sickchill"
    - "sickrage"
    - "smokeping"
    - "snipe-it"
    - "sonarqube"
    - "sonarr"
    - "synclounge"
    - "syncthing"
    - "tautulli"
    - "transmission"
    - "ubooquity"
    - "unifi-controller"
    - "uptime-kuma"
    - "webtop"
    - "youtube-dl-server"
  register: files

- name: Copy .htpasswd file
  ansible.builtin.copy:
    content: "{{ docker_swag_htpasswd }}"
    dest: "{{docker_swag_dir}}/config/nginx/.htpasswd"
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    force: "{{docker_swag_force}}"
    mode: 0644
  register: htpasswd_file

- name: Ensure linuxserver/swag image is pulled
  community.docker.docker_image:
    name: lscr.io/linuxserver/swag
    source: pull
    force_source: yes
  register: pulled

- name: Remove swag container
  community.docker.docker_container:
    name: swag
    state: absent
  when:
    files.changed
    or
    htpasswd_file.changed
    or
    pulled.changed

- name: Get infos on swag container
  community.docker.docker_container_info:
    name: swag
  register: result

- name: Create swag container
  ansible.builtin.shell: |
    docker run -d \
    --name=swag \
    --cap-add=NET_ADMIN \
    -e PUID={{docker_swag_puid}} \
    -e PGID={{docker_swag_pgid}} \
    -e TZ={{docker_swag_tz}} \
    -e URL={{docker_swag_url}} \
    -e SUBDOMAINS=wildcard \
    -e VALIDATION=dns \
    -e DNSPLUGIN=cloudflare \
    -e ONLY_SUBDOMAINS=true \
    -e EXTRA_DOMAINS={{docker_swag_extra_domains}} \
    -v {{docker_swag_dir}}/config:/config:Z \
    -p 80:80 \
    -p 443:443 \
    --network=app-network \
    --restart unless-stopped \
    lscr.io/linuxserver/swag
  when:
    files.changed
    or
    htpasswd_file.changed
    or
    pulled.changed
    or
    result.exists == false

- name: Add swag container to bridge network
  ansible.builtin.shell:
    cmd: "docker network connect bridge swag"
  when:
    files.changed
    or
    htpasswd_file.changed
    or
    pulled.changed
    or
    result.exists == false
