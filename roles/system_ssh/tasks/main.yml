---
- name: Set permissions for .ssh directory
  ansible.builtin.file:
    path: "/home/{{ system_ssh_user }}/.ssh"
    state: directory
    mode: 0700
    owner: "{{ system_ssh_user }}"
    group: "{{ system_ssh_user if ansible_pkg_mgr != 'zypper' else 'users' }}"

- name: "Insert public ssh key for user {{ system_ssh_user }}"
  ansible.builtin.blockinfile:
    dest: "/home/{{ system_ssh_user }}/.ssh/authorized_keys"
    create: true
    owner: "{{ system_ssh_user }}"
    group: "{{ system_ssh_user if ansible_os_family != 'Suse' else 'users' }}"
    mode: 0644
    block: "{{ system_ssh_user_key }}"

- name: Disable root login.
  ansible.builtin.lineinfile: 
    path: /etc/ssh/sshd_config
    regexp: "^PermitRootLogin"
    line: "PermitRootLogin no"
    state: present
  notify: restart sshd

- name: Disable password login (PasswordAuthentication)
  ansible.builtin.lineinfile: 
    path: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication no"
    state: present
  notify: restart sshd

- name: Disable password login (ChallengeResponseAuthentication)
  ansible.builtin.lineinfile: 
    path: /etc/ssh/sshd_config
    regexp: "^ChallengeResponseAuthentication"
    line: "ChallengeResponseAuthentication no"
    state: present
  notify: restart sshd

- name: Set AuthenticationMethods to publickey
  ansible.builtin.lineinfile: 
    path: /etc/ssh/sshd_config
    regexp: "^AuthenticationMethods"
    line: "AuthenticationMethods publickey"
    state: present
  notify: restart sshd

- name: Insert banner
  ansible.builtin.copy:
    content: |
     WARNING: Unauthorized access to this system is forbidden and will be
     prosecuted by law. By accessing this system, you agree that your actions
     may be monitored if unauthorized usage is suspected.
    dest: /etc/issue.net
    mode: 0644

- name: Enable banner
  ansible.builtin.lineinfile: 
    path: /etc/ssh/sshd_config
    regexp: "^Banner none"
    line: "Banner /etc/issue.net"
    state: present
  notify: restart sshd

- name: Ensure SSH is started and enabled at boot
  service:
    name: sshd
    state: "{{ system_ssh_service_state }}"
    enabled: "{{ system_ssh_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure handlers are notified now to avoid firewall conflicts
  meta: flush_handlers

- name: Check if group exists
  shell: /usr/bin/getent group | awk -F":" '{print $1}'
  changed_when: false
  register: etc_groups

- name: "Add user {{ ssh_user }} to sudo group"
  ansible.builtin.user:
    name: "{{ system_ssh_user }}"
    groups: "{{ item }}"
    append: yes
  when: 'item in etc_groups.stdout_lines'
  with_items: 
    - sudo
    - wheel
